#!/bin/bash

_ID=slurm-$SLURM_JOB_ID
_TMP=/scratch/tmp/${_ID}
_LOGROOT=/scratch/slurm_log
_LOGDIR=$_LOGROOT/$SLURM_JOB_ID

mkdir -p ${_LOGDIR}
# csak az stderr-t iranyitjuk at, hogy echoval tudjunk a slurmnek
# uzenni -- ennek a scriptnek bizonyos kimeneteit ertelmezi
# http://slurm.schedmd.com/prolog_epilog.html
exec 2>>${_LOGDIR}/Epilog.log

echo "<<<<< START >>>>>" >&2

date >&2

set -x

env | sort >&2

# Minden olyan processzt megolunk ami a jobhoz tartozik es vegre nem fognak ott maradni arvan
# roczei, 2015.04.18.

pgid=`cat ${_TMP}/pgid &> /dev/null`
ppids=`ps xao pid,ppid,pgid,comm | awk -v pgid=$pgid '($3 == pgid) && ($4 != "slurm_script") {print $2}'`
pids=`ps  xao pid,ppid,pgid,comm | awk -v pgid=$pgid '$3 == pgid {print $1}'`
all_pids="$pids $ppids"

if [ ! -z "$all_pids" ]; then
    for i in $all_pids
    do
	while true
	do
	    kill -KILL $i &> /dev/null
	    if [ $? -eq 1 ]
	    then
		break
	    fi
	    sleep 1
	done
    done
fi

if test -r ${_TMP}/mpirun.pid; then
    : "Killing mpirun: ${_TMP}/mpirun.pid"
    mpipid=$(cat ${_TMP}/mpirun.pid)
    if [ -d /proc/$mpipid ]; then
       kill -KILL $mpipid
    fi
fi

# szegeden cron csinalja
DATE=`date +%Y-%m-%d_%H:%M:%S`
if test -d ${_TMP}; then
    rm -fR ${_TMP}
    if [ ! $? -eq 0 ]; then
       echo $DATE Nem törölhető: ${_TMP}, JobID: ${SLURM_JOB_ID} >> ${_LOGROOT}/Epilog_error.log
    fi
fi
if test -d ${_LOGDIR}; then
    rm -fR ${_LOGDIR}
    if [ ! $? -eq 0 ]; then
       echo $DATE Nem törölhető: ${_LOGDIR}, JobID: ${SLURM_JOB_ID} >> ${_LOGROOT}/Epilog_error.log
    fi
fi

# Nem 0 esetén drain-be megy a compute node.
exit 0
